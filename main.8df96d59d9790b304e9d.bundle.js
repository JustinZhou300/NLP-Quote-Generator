(()=>{"use strict";var e={m:{},u:e=>e+".a40860598d0217a9dca9.bundle.js"};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),e.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var i=e.g.document;if(!t&&i&&(i.currentScript&&(t=i.currentScript.src),!t)){var r=i.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})(),e.b=document.baseURI||self.location.href;const t=["the","i","if","you","when","a","we","to","it","don't","life","there","your","in","be","what","love","never","sometimes","every","do","no","it's","let","people","all","my","success","one","god","as","for","education","how","live","always","even","and","true","only","stop","our","happiness","knowledge","she",".","those","some","whatever","make","change","just","with","but","at","nothing","remember","everything","time","he","faith","each","once","believe","fear","hope","an","learn","keep","being","dreams","go","without","i'm","so","why","there's","i've","maybe","you're","take","they","most","this","focus","today","like","great","kindness","wisdom","give","everyone","by","any","find","have","may","before","until","try"];new class{constructor(){this.temperature=.01,this.max_length=100,this.text="",this.generateButton=document.getElementById("generate-button"),this.generatedText=document.getElementById("generated-text"),this.temperature_slider=document.getElementById("temperature-slider"),this.generateButton.disabled=!0,this.workerSetup(),this.generateButton.onclick=()=>{this.generateText()},this.text_count=0}enableGeneration(){this.generateButton.innerText="Generate a New Quote",this.generateButton.disabled=!1}disableGeneration(){this.generateButton.innerText="Generating...",this.generateButton.disabled=!0}generateText(){this.text_count=0,this.temperature=this.temperature_slider.value,this.disableGeneration();const e=Math.floor(Math.random()*t.length);this.text=t[e],this.worker.postMessage({type:"generate",data:this.text,temp:this.temperature,length:this.max_length})}format_text(){this.text=this.text.replace(/ i /g," I "),this.text=this.text.replace(/ i'/g," I'"),this.text=this.text.replace(/^[a-z]/g,(e=>e.toUpperCase())),this.text=this.text.replace(/ (,|;|:|\?|!) /g,"$1 "),this.text=this.text.replace(/\. \./g,".."),this.text=this.text.replace(/\. \./g,".."),this.text=this.text.replace(/ \. /g,". "),this.text=this.text.replace(/ \.\./g,"."),this.text=this.text.replace(/ (\.|\?|!)$/,"$1"),this.text=this.text.replace(/(\.|!|\?) [a-z]/g,(e=>e.toUpperCase()))}workerSetup(){this.worker=new Worker(new URL(e.p+e.u(235),e.b)),this.worker.postMessage({type:"load"}),this.worker.onmessage=e=>{switch(e.data.type){case"load":console.log("Tensorflow loaded"),this.enableGeneration();break;case"generate":"eom"===e.data.data?(this.format_text(),this.generatedText.innerText=`"${this.text}"`,this.enableGeneration()):(this.text_count+=1,this.text=`${this.text} ${e.data.data}`,this.generatedText.innerText=this.text,this.text_count===this.max_length&&(this.format_text(),this.generatedText.innerText=`"${this.text}"`,this.enableGeneration()))}}}};document.getElementById("test")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ubHAtcmFuZG9tLXF1b3Rlcy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9ubHAtcmFuZG9tLXF1b3Rlcy93ZWJwYWNrL3J1bnRpbWUvZ2V0IGphdmFzY3JpcHQgY2h1bmsgZmlsZW5hbWUiLCJ3ZWJwYWNrOi8vbmxwLXJhbmRvbS1xdW90ZXMvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9ubHAtcmFuZG9tLXF1b3Rlcy93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL25scC1yYW5kb20tcXVvdGVzL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL25scC1yYW5kb20tcXVvdGVzL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL25scC1yYW5kb20tcXVvdGVzLy4vc3JjL2Fzc2V0cy9tb2RlbC9maXJzdF93b3JkLmpzIiwid2VicGFjazovL25scC1yYW5kb20tcXVvdGVzLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL25scC1yYW5kb20tcXVvdGVzLy4vc3JjL2FwcC5qcyJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiY2h1bmtJZCIsImciLCJnbG9iYWxUaGlzIiwidGhpcyIsIkZ1bmN0aW9uIiwiZSIsIndpbmRvdyIsIm8iLCJvYmoiLCJwcm9wIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiZG9jdW1lbnQiLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwibGVuZ3RoIiwiRXJyb3IiLCJyZXBsYWNlIiwicCIsImIiLCJiYXNlVVJJIiwic2VsZiIsImhyZWYiLCJ0ZW1wZXJhdHVyZSIsIm1heF9sZW5ndGgiLCJ0ZXh0IiwiZ2VuZXJhdGVCdXR0b24iLCJnZXRFbGVtZW50QnlJZCIsImdlbmVyYXRlZFRleHQiLCJ0ZW1wZXJhdHVyZV9zbGlkZXIiLCJkaXNhYmxlZCIsIndvcmtlclNldHVwIiwib25jbGljayIsImdlbmVyYXRlVGV4dCIsInRleHRfY291bnQiLCJpbm5lclRleHQiLCJ2YWx1ZSIsImRpc2FibGVHZW5lcmF0aW9uIiwicmFuZG9tTnVtIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiZmlyc3Rfd29yZCIsIndvcmtlciIsInBvc3RNZXNzYWdlIiwidHlwZSIsImRhdGEiLCJ0ZW1wIiwieCIsInRvVXBwZXJDYXNlIiwiV29ya2VyIiwiVVJMIiwib25tZXNzYWdlIiwibSIsImNvbnNvbGUiLCJsb2ciLCJlbmFibGVHZW5lcmF0aW9uIiwiZm9ybWF0X3RleHQiXSwibWFwcGluZ3MiOiJ1QkFDSUEsRUFBc0IsQ0FHMUIsRSxHQ0hBLEVBQXlCQyxHQUVaQSxFQUFMLG1DQ0hSRCxFQUFvQkUsRUFBSSxXQUN2QixHQUEwQixpQkFBZkMsV0FBeUIsT0FBT0EsV0FDM0MsSUFDQyxPQUFPQyxNQUFRLElBQUlDLFNBQVMsY0FBYixHQUNkLE1BQU9DLEdBQ1IsR0FBc0IsaUJBQVhDLE9BQXFCLE9BQU9BLFFBTGpCLEdDQXhCUCxFQUFvQlEsRUFBSSxDQUFDQyxFQUFLQyxJQUFVQyxPQUFPQyxVQUFVQyxlQUFlQyxLQUFLTCxFQUFLQyxHLE1DQWxGLElBQUlLLEVBQ0FmLEVBQW9CRSxFQUFFYyxnQkFBZUQsRUFBWWYsRUFBb0JFLEVBQUVlLFNBQVcsSUFDdEYsSUFBSUMsRUFBV2xCLEVBQW9CRSxFQUFFZ0IsU0FDckMsSUFBS0gsR0FBYUcsSUFDYkEsRUFBU0MsZ0JBQ1pKLEVBQVlHLEVBQVNDLGNBQWNDLE1BQy9CTCxHQUFXLENBQ2YsSUFBSU0sRUFBVUgsRUFBU0kscUJBQXFCLFVBQ3pDRCxFQUFRRSxTQUFRUixFQUFZTSxFQUFRQSxFQUFRRSxPQUFTLEdBQUdILEtBSzdELElBQUtMLEVBQVcsTUFBTSxJQUFJUyxNQUFNLHlEQUNoQ1QsRUFBWUEsRUFBVVUsUUFBUSxPQUFRLElBQUlBLFFBQVEsUUFBUyxJQUFJQSxRQUFRLFlBQWEsS0FDcEZ6QixFQUFvQjBCLEVBQUlYLEcsR0NmeEJmLEVBQW9CMkIsRUFBSVQsU0FBU1UsU0FBV0MsS0FBS1osU0FBU2EsS0NBMUQsU0FDQyxNQUFPLElBQUssS0FBTSxNQUFPLE9BQVEsSUFBSyxLQUFNLEtBQU0sS0FBTSxRQUFTLE9BQVEsUUFBUyxPQUFRLEtBQU0sS0FBTSxPQUFRLE9BQVEsUUFBUyxZQUFhLFFBQVMsS0FBTSxLQUFNLE9BQVEsTUFBTyxTQUFVLE1BQU8sS0FBTSxVQUFXLE1BQU8sTUFBTyxLQUFNLE1BQU8sWUFBYSxNQUFPLE9BQVEsU0FBVSxPQUFRLE1BQU8sT0FBUSxPQUFRLE9BQVEsTUFBTyxZQUFhLFlBQWEsTUFBTyxJQUFLLFFBQVMsT0FBUSxXQUFZLE9BQVEsU0FBVSxPQUFRLE9BQVEsTUFBTyxLQUFNLFVBQVcsV0FBWSxhQUFjLE9BQVEsS0FBTSxRQUFTLE9BQVEsT0FBUSxVQUFXLE9BQVEsT0FBUSxLQUFNLFFBQVMsT0FBUSxRQUFTLFNBQVUsS0FBTSxVQUFXLE1BQU8sS0FBTSxNQUFPLFVBQVcsT0FBUSxRQUFTLFNBQVUsT0FBUSxPQUFRLE9BQVEsT0FBUSxRQUFTLFFBQVMsT0FBUSxRQUFTLFdBQVksU0FBVSxPQUFRLFdBQVksS0FBTSxNQUFPLE9BQVEsT0FBUSxNQUFPLFNBQVUsUUFBUyxPQ0N4eUIsSUNBRyxNQUVYLGNBRUkxQixLQUFLMkIsWUFBYyxJQUNuQjNCLEtBQUs0QixXQUFhLElBQ2xCNUIsS0FBSzZCLEtBQU8sR0FDWjdCLEtBQUs4QixlQUFpQmhCLFNBQVNpQixlQUFlLG1CQUM5Qy9CLEtBQUtnQyxjQUFnQmxCLFNBQVNpQixlQUFlLGtCQUM3Qy9CLEtBQUtpQyxtQkFBcUJuQixTQUFTaUIsZUFBZSxzQkFDbEQvQixLQUFLOEIsZUFBZUksVUFBVyxFQUMvQmxDLEtBQUttQyxjQUNMbkMsS0FBSzhCLGVBQWVNLFFBQVUsS0FDMUJwQyxLQUFLcUMsZ0JBR1RyQyxLQUFLc0MsV0FBYSxFQUd0QixtQkFDSXRDLEtBQUs4QixlQUFlUyxVQUFZLHVCQUNoQ3ZDLEtBQUs4QixlQUFlSSxVQUFXLEVBR25DLG9CQUNJbEMsS0FBSzhCLGVBQWVTLFVBQVksZ0JBQ2hDdkMsS0FBSzhCLGVBQWVJLFVBQVcsRUFHbkMsZUFDSWxDLEtBQUtzQyxXQUFhLEVBQ2xCdEMsS0FBSzJCLFlBQWMzQixLQUFLaUMsbUJBQW1CTyxNQUMzQ3hDLEtBQUt5QyxvQkFDTCxNQUFNQyxFQUFZQyxLQUFLQyxNQUFNRCxLQUFLRSxTQUFXQyxFQUFXM0IsUUFDeERuQixLQUFLNkIsS0FBT2lCLEVBQVdKLEdBQ3ZCMUMsS0FBSytDLE9BQU9DLFlBQVksQ0FBQ0MsS0FBSyxXQUFXQyxLQUFNbEQsS0FBSzZCLEtBQU1zQixLQUFNbkQsS0FBSzJCLFlBQWFSLE9BQVFuQixLQUFLNEIsYUFHbkcsY0FFSTVCLEtBQUs2QixLQUFPN0IsS0FBSzZCLEtBQUtSLFFBQVEsT0FBUSxPQUN0Q3JCLEtBQUs2QixLQUFPN0IsS0FBSzZCLEtBQUtSLFFBQVEsT0FBUSxPQUV0Q3JCLEtBQUs2QixLQUFPN0IsS0FBSzZCLEtBQUtSLFFBQVEsV0FBWStCLEdBQWNBLEVBQUVDLGdCQUUxRHJELEtBQUs2QixLQUFPN0IsS0FBSzZCLEtBQUtSLFFBQVEsa0JBQWtCLE9BRWhEckIsS0FBSzZCLEtBQU83QixLQUFLNkIsS0FBS1IsUUFBUSxTQUFTLE1BQ3ZDckIsS0FBSzZCLEtBQU83QixLQUFLNkIsS0FBS1IsUUFBUSxTQUFTLE1BRXZDckIsS0FBSzZCLEtBQU83QixLQUFLNkIsS0FBS1IsUUFBUSxRQUFRLE1BRXRDckIsS0FBSzZCLEtBQU83QixLQUFLNkIsS0FBS1IsUUFBUSxTQUFTLEtBRXZDckIsS0FBSzZCLEtBQU83QixLQUFLNkIsS0FBS1IsUUFBUSxjQUFjLE1BRTVDckIsS0FBSzZCLEtBQU83QixLQUFLNkIsS0FBS1IsUUFBUSxvQkFBcUIrQixHQUFlQSxFQUFFQyxnQkFJeEUsY0FDSXJELEtBQUsrQyxPQUFTLElBQUlPLE9BQU8sSUFBSUMsSUFBSSxtQkFDakN2RCxLQUFLK0MsT0FBT0MsWUFBWSxDQUFDQyxLQUFNLFNBQy9CakQsS0FBSytDLE9BQU9TLFVBQWFDLElBRXJCLE9BQU9BLEVBQUVQLEtBQUtELE1BQ1YsSUFBSyxPQUNEUyxRQUFRQyxJQUFJLHFCQUNaM0QsS0FBSzRELG1CQUNMLE1BQ0osSUFBSyxXQUNrQixRQUFoQkgsRUFBRVAsS0FBS0EsTUFFTmxELEtBQUs2RCxjQUNMN0QsS0FBS2dDLGNBQWNPLFVBQVksSUFBSXZDLEtBQUs2QixRQUN4QzdCLEtBQUs0RCxxQkFHTDVELEtBQUtzQyxZQUFjLEVBQ25CdEMsS0FBSzZCLEtBQU8sR0FBRzdCLEtBQUs2QixRQUFRNEIsRUFBRVAsS0FBS0EsT0FDbkNsRCxLQUFLZ0MsY0FBY08sVUFBWXZDLEtBQUs2QixLQUNoQzdCLEtBQUtzQyxhQUFldEMsS0FBSzRCLGFBQ3pCNUIsS0FBSzZELGNBQ0w3RCxLQUFLZ0MsY0FBY08sVUFBWSxJQUFJdkMsS0FBSzZCLFFBQ3hDN0IsS0FBSzRELHlCRGxGdEI5QyxTQUFTaUIsZUFBZSxTIiwiZmlsZSI6Im1haW4uMjc3NGQyYTg5ZWJkM2FjOTMxMDMuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIHJlcXVpcmUgc2NvcGVcbnZhciBfX3dlYnBhY2tfcmVxdWlyZV9fID0ge307XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBUaGlzIGZ1bmN0aW9uIGFsbG93IHRvIHJlZmVyZW5jZSBhc3luYyBjaHVua3Ncbl9fd2VicGFja19yZXF1aXJlX18udSA9IChjaHVua0lkKSA9PiB7XG5cdC8vIHJldHVybiB1cmwgZm9yIGZpbGVuYW1lcyBiYXNlZCBvbiB0ZW1wbGF0ZVxuXHRyZXR1cm4gXCJcIiArIGNodW5rSWQgKyBcIi5cIiArIFwiZjliNzliZGFjZWI2OTMzM2RkYzhcIiArIFwiLmJ1bmRsZS5qc1wiO1xufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsImV4cG9ydCBkZWZhdWx0XHJcbltcInRoZVwiLCBcImlcIiwgXCJpZlwiLCBcInlvdVwiLCBcIndoZW5cIiwgXCJhXCIsIFwid2VcIiwgXCJ0b1wiLCBcIml0XCIsIFwiZG9uJ3RcIiwgXCJsaWZlXCIsIFwidGhlcmVcIiwgXCJ5b3VyXCIsIFwiaW5cIiwgXCJiZVwiLCBcIndoYXRcIiwgXCJsb3ZlXCIsIFwibmV2ZXJcIiwgXCJzb21ldGltZXNcIiwgXCJldmVyeVwiLCBcImRvXCIsIFwibm9cIiwgXCJpdCdzXCIsIFwibGV0XCIsIFwicGVvcGxlXCIsIFwiYWxsXCIsIFwibXlcIiwgXCJzdWNjZXNzXCIsIFwib25lXCIsIFwiZ29kXCIsIFwiYXNcIiwgXCJmb3JcIiwgXCJlZHVjYXRpb25cIiwgXCJob3dcIiwgXCJsaXZlXCIsIFwiYWx3YXlzXCIsIFwiZXZlblwiLCBcImFuZFwiLCBcInRydWVcIiwgXCJvbmx5XCIsIFwic3RvcFwiLCBcIm91clwiLCBcImhhcHBpbmVzc1wiLCBcImtub3dsZWRnZVwiLCBcInNoZVwiLCBcIi5cIiwgXCJ0aG9zZVwiLCBcInNvbWVcIiwgXCJ3aGF0ZXZlclwiLCBcIm1ha2VcIiwgXCJjaGFuZ2VcIiwgXCJqdXN0XCIsIFwid2l0aFwiLCBcImJ1dFwiLCBcImF0XCIsIFwibm90aGluZ1wiLCBcInJlbWVtYmVyXCIsIFwiZXZlcnl0aGluZ1wiLCBcInRpbWVcIiwgXCJoZVwiLCBcImZhaXRoXCIsIFwiZWFjaFwiLCBcIm9uY2VcIiwgXCJiZWxpZXZlXCIsIFwiZmVhclwiLCBcImhvcGVcIiwgXCJhblwiLCBcImxlYXJuXCIsIFwia2VlcFwiLCBcImJlaW5nXCIsIFwiZHJlYW1zXCIsIFwiZ29cIiwgXCJ3aXRob3V0XCIsIFwiaSdtXCIsIFwic29cIiwgXCJ3aHlcIiwgXCJ0aGVyZSdzXCIsIFwiaSd2ZVwiLCBcIm1heWJlXCIsIFwieW91J3JlXCIsIFwidGFrZVwiLCBcInRoZXlcIiwgXCJtb3N0XCIsIFwidGhpc1wiLCBcImZvY3VzXCIsIFwidG9kYXlcIiwgXCJsaWtlXCIsIFwiZ3JlYXRcIiwgXCJraW5kbmVzc1wiLCBcIndpc2RvbVwiLCBcImdpdmVcIiwgXCJldmVyeW9uZVwiLCBcImJ5XCIsIFwiYW55XCIsIFwiZmluZFwiLCBcImhhdmVcIiwgXCJtYXlcIiwgXCJiZWZvcmVcIiwgXCJ1bnRpbFwiLCBcInRyeVwiXSIsImltcG9ydCBBcHAgZnJvbSAnLi9hcHAuanMnO1xyXG5pbXBvcnQgXCIuL21haW4uc2Nzc1wiO1xyXG5jb25zdCBhcHAgPSBuZXcgQXBwKCk7XHJcblxyXG5sZXQgdGVzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGVzdFwiKSIsImltcG9ydCBmaXJzdF93b3JkIGZyb20gJy4vYXNzZXRzL21vZGVsL2ZpcnN0X3dvcmQuanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBwIHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpXHJcbiAgICB7XHJcbiAgICAgICAgdGhpcy50ZW1wZXJhdHVyZSA9IDAuMDE7XHJcbiAgICAgICAgdGhpcy5tYXhfbGVuZ3RoID0gMTAwO1xyXG4gICAgICAgIHRoaXMudGV4dCA9IFwiXCI7XHJcbiAgICAgICAgdGhpcy5nZW5lcmF0ZUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ2VuZXJhdGUtYnV0dG9uXCIpO1xyXG4gICAgICAgIHRoaXMuZ2VuZXJhdGVkVGV4dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ2VuZXJhdGVkLXRleHRcIik7XHJcbiAgICAgICAgdGhpcy50ZW1wZXJhdHVyZV9zbGlkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRlbXBlcmF0dXJlLXNsaWRlclwiKTtcclxuICAgICAgICB0aGlzLmdlbmVyYXRlQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLndvcmtlclNldHVwKCk7XHJcbiAgICAgICAgdGhpcy5nZW5lcmF0ZUJ1dHRvbi5vbmNsaWNrID0gKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmdlbmVyYXRlVGV4dCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICB0aGlzLnRleHRfY291bnQgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIGVuYWJsZUdlbmVyYXRpb24oKSB7XHJcbiAgICAgICAgdGhpcy5nZW5lcmF0ZUJ1dHRvbi5pbm5lclRleHQgPSBcIkdlbmVyYXRlIGEgTmV3IFF1b3RlXCI7XHJcbiAgICAgICAgdGhpcy5nZW5lcmF0ZUJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIGRpc2FibGVHZW5lcmF0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5nZW5lcmF0ZUJ1dHRvbi5pbm5lclRleHQgPSBcIkdlbmVyYXRpbmcuLi5cIjtcclxuICAgICAgICB0aGlzLmdlbmVyYXRlQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBnZW5lcmF0ZVRleHQoKXtcclxuICAgICAgICB0aGlzLnRleHRfY291bnQgPSAwO1xyXG4gICAgICAgIHRoaXMudGVtcGVyYXR1cmUgPSB0aGlzLnRlbXBlcmF0dXJlX3NsaWRlci52YWx1ZTtcclxuICAgICAgICB0aGlzLmRpc2FibGVHZW5lcmF0aW9uKCk7XHJcbiAgICAgICAgY29uc3QgcmFuZG9tTnVtID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogZmlyc3Rfd29yZC5sZW5ndGgpOyBcclxuICAgICAgICB0aGlzLnRleHQgPSBmaXJzdF93b3JkW3JhbmRvbU51bV07XHJcbiAgICAgICAgdGhpcy53b3JrZXIucG9zdE1lc3NhZ2Uoe3R5cGU6XCJnZW5lcmF0ZVwiLGRhdGE6IHRoaXMudGV4dCwgdGVtcDogdGhpcy50ZW1wZXJhdHVyZSwgbGVuZ3RoOiB0aGlzLm1heF9sZW5ndGh9KVxyXG4gICAgfVxyXG5cclxuICAgIGZvcm1hdF90ZXh0KCl7XHJcbiAgICAgICAgLy8gY2FwaXRhbGl6ZSBJXHJcbiAgICAgICAgdGhpcy50ZXh0ID0gdGhpcy50ZXh0LnJlcGxhY2UoLyBpIC9nLCBcIiBJIFwiKTtcclxuICAgICAgICB0aGlzLnRleHQgPSB0aGlzLnRleHQucmVwbGFjZSgvIGknL2csIFwiIEknXCIpO1xyXG4gICAgICAgIC8vIGFwcGx5IHVwcGVyIHRvIGZpcnN0IGNoYXJhY3RlciBpbiBTdHJpbmdcclxuICAgICAgICB0aGlzLnRleHQgPSB0aGlzLnRleHQucmVwbGFjZSgvXlthLXpdL2csICh4KSA9PiB7cmV0dXJuIHgudG9VcHBlckNhc2UoKX0pO1xyXG4gICAgICAgIC8vIHJlbW92ZSBleGNlc3Mgc3BhY2Ugd2l0aCBjb21tYSxzZW1pIGNvbG9uIGFuZCBjb2xvblxyXG4gICAgICAgIHRoaXMudGV4dCA9IHRoaXMudGV4dC5yZXBsYWNlKC8gKCx8O3w6fFxcP3whKSAvZyxcIiQxIFwiKTtcclxuICAgICAgICAvLyBtZXJnZSBmdWxsIHN0b3BzXHJcbiAgICAgICAgdGhpcy50ZXh0ID0gdGhpcy50ZXh0LnJlcGxhY2UoL1xcLiBcXC4vZyxcIi4uXCIpO1xyXG4gICAgICAgIHRoaXMudGV4dCA9IHRoaXMudGV4dC5yZXBsYWNlKC9cXC4gXFwuL2csXCIuLlwiKTsgLy8gZG8gdHdpY2UgaW4gYSByb3dcclxuICAgICAgICAvLyByZW1vdmUgZXhjZXNzIHNwYWNlIHdpdGggZnVsbCBzdG9wXHJcbiAgICAgICAgdGhpcy50ZXh0ID0gdGhpcy50ZXh0LnJlcGxhY2UoLyBcXC4gL2csXCJcXC4gXCIpO1xyXG4gICAgICAgIC8vIGF0dGFjaCB0cmFpbGluZyBkb3RzIHRvIGVuZCBvZiB3b3JkXHJcbiAgICAgICAgdGhpcy50ZXh0ID0gdGhpcy50ZXh0LnJlcGxhY2UoLyBcXC5cXC4vZyxcIlxcLlwiKTtcclxuICAgICAgICAvL3JlbW92ZSBzcGFjZSBhdCB0aGUgZW5kIG9mIGEgc3RyaW5nLlxyXG4gICAgICAgIHRoaXMudGV4dCA9IHRoaXMudGV4dC5yZXBsYWNlKC8gKFxcLnxcXD98ISkkLyxcIiQxXCIpO1xyXG4gICAgICAgIC8vIGFwcGx5IHVwcGVyIGNhc2UgdG8gZmlyc3QgY2hhcmFjdGVyIG9mIHNlbnRlbmNlXHJcbiAgICAgICAgdGhpcy50ZXh0ID0gdGhpcy50ZXh0LnJlcGxhY2UoLyhcXC58IXxcXD8pIFthLXpdL2csICh4KSA9PiB7IHJldHVybiB4LnRvVXBwZXJDYXNlKCl9ICk7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHdvcmtlclNldHVwKCl7XHJcbiAgICAgICAgdGhpcy53b3JrZXIgPSBuZXcgV29ya2VyKG5ldyBVUkwoJy4vd29ya2VyLmpzJywgaW1wb3J0Lm1ldGEudXJsKSk7XHJcbiAgICAgICAgdGhpcy53b3JrZXIucG9zdE1lc3NhZ2Uoe3R5cGU6IFwibG9hZFwifSk7XHJcbiAgICAgICAgdGhpcy53b3JrZXIub25tZXNzYWdlID0gKG0pID0+XHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBzd2l0Y2gobS5kYXRhLnR5cGUpe1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcImxvYWRcIjpcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlRlbnNvcmZsb3cgbG9hZGVkXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZW5hYmxlR2VuZXJhdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcImdlbmVyYXRlXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgaWYobS5kYXRhLmRhdGEgPT09IFwiZW9tXCIpXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmZvcm1hdF90ZXh0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2VuZXJhdGVkVGV4dC5pbm5lclRleHQgPSBgXCIke3RoaXMudGV4dH1cImA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZW5hYmxlR2VuZXJhdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnRleHRfY291bnQgKz0gMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50ZXh0ID0gYCR7dGhpcy50ZXh0fSAke20uZGF0YS5kYXRhfWA7ICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZWRUZXh0LmlubmVyVGV4dCA9IHRoaXMudGV4dDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMudGV4dF9jb3VudCA9PT0gdGhpcy5tYXhfbGVuZ3RoKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZm9ybWF0X3RleHQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2VuZXJhdGVkVGV4dC5pbm5lclRleHQgPSBgXCIke3RoaXMudGV4dH1cImA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVuYWJsZUdlbmVyYXRpb24oKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufSJdLCJzb3VyY2VSb290IjoiIn0=